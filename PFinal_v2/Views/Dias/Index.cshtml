@model PFinal_v2.Models.ViewModels.DiaFormViewModel

@{
    ViewData["Title"] = "Lançamento de Horas";
}

<h5>Olá, @User.Identity.Name!</h5>

@if (TempData["ErrorMessage"] != null)

{

    <div class="alert alert-danger">

        @TempData["ErrorMessage"]

    </div>

}

<form asp-action="Index" method="get" class="row align-items-end mb-3">

    <div class="col-5">

        <div class="form-group">

            <input type="month" name="mes" id="mes" value="@Model.Mes" class="form-control" />

        </div>

    </div>

    <div class="col-5">

        <div class="form-group">


            <select name="quinzena" class="form-control">

                <option value="1" selected="@(Model.Quinzena == 1)">1ª</option>

                <option value="2" selected="@(Model.Quinzena == 2)">2ª</option>

            </select>

        </div>

    </div>

    <div class="col-2">

        <button type="submit" class="custom-filter-button">
            <i class="bi bi-search"></i>
        </button>

    </div>
</form>


<table class="table table-bordered" id="tabela-horas">

    <thead class="tabela-horas-thead">

        <tr>

            <th id="primeira-coluna">Código de Custo</th>

            @{

                int startDay = Model.Quinzena == 1 ? 1 : 16;

                int endDay = Model.Quinzena == 1 ? 15 : DateTime.DaysInMonth(DateTime.Parse(Model.Mes).Year, DateTime.Parse(Model.Mes).Month);

                foreach (var dia in Enumerable.Range(startDay, endDay - startDay + 1))

                {

                    var data = new DateTime(DateTime.Parse(Model.Mes).Year, DateTime.Parse(Model.Mes).Month, dia);


                    if (data.DayOfWeek == DayOfWeek.Saturday || data.DayOfWeek == DayOfWeek.Sunday)

                    {

                        <th class="celula-dia weekend" data-dia-id="">

                            @data.ToString("ddd dd/MM")

                        </th>

                    }

                    else

                    {

                        <th>@data.ToString("ddd dd/MM")</th>

                    }

                }

            }


            <th>Total</th>
        </tr>
    </thead>


    </tr>

    </thead>

    <tbody>

        <tr>

            <td class="local-trabalho" id="primeira-coluna">Local de Trabalho</td>

            @{
                for (var dia = startDay; dia <= endDay; dia++)
                {
                    <td class="local-trabalho">
                        @if (Model.Usuario != null && Model.Usuario.LocalTrabalho.HasValue)
                        {
                            <a href="@Url.Action("Localizacao", "Usuarios")">
                                @Model.Usuario.LocalTrabalho.ToString()
                                <i class="bi bi-caret-down-fill"></i>
                            </a>
                        }
                        else
                        {
                            @:&nbsp; <!-- célula vazia -->
                        }
                    </td>
                }
            }

            <td class="total-horas-local"></td> <!-- célula vazia da LINHA de 'Local' e da COLUNA de 'Total' -->
        </tr>


        @foreach (var wbs in Model.ListaWbs)
        {
            <tr>
                <td id="primeira-coluna">@wbs.Descricao @wbs.Codigo</td>
                @{
                    double totalHorasWbs = 0;  // Inicializa a soma para cada WBS
                    foreach (var dia in Enumerable.Range(startDay, endDay - startDay + 1))
                    {
                        var data = new DateTime(DateTime.Parse(Model.Mes).Year, DateTime.Parse(Model.Mes).Month, dia);
                        var lancamentoDoDia = Model.Lancamentos.FirstOrDefault(l => l.DiaData.Date == data && l.WbsId == wbs.WbsId);
                        if (data.DayOfWeek == DayOfWeek.Saturday || data.DayOfWeek == DayOfWeek.Sunday)
                        {
                            // Se for sábado ou domingo e houver lançamento, exibe as horas, caso contrário, exibe VAZIO!!
                            <td class="@(lancamentoDoDia != null ? "celula-dia celula-dia-clicavel" : "celula-dia weekend")" data-dia-id="@((lancamentoDoDia != null) ? lancamentoDoDia.DiaId : "")">
                                @(lancamentoDoDia != null ? lancamentoDoDia.Horas.ToString("0.0") : "")
                            </td>
                        }
                        else
                        {
                            // Se não for sábado ou domingo, exibe as horas normais e soma ao total
                            <td data-dia-id="@((lancamentoDoDia != null) ? lancamentoDoDia.DiaId : "")" contenteditable="false" class="celula-dia">
                                @if (lancamentoDoDia != null && lancamentoDoDia.Horas > 0)
                                {
                                    totalHorasWbs += lancamentoDoDia.Horas;
                                    @lancamentoDoDia.Horas.ToString("0.0")
                                }
                                else
                                {
                                    @:&nbsp; <!-- célula vazia -->
                                }
                            </td>
                        }
                    }
                }
                <td class="total-horas-wbs">
                    @if (totalHorasWbs > 0)  // Exibe a soma SE houver lançamentos!!!
                    {
                        @totalHorasWbs.ToString("0.0")
                    }
                    else
                    {
                        @:&nbsp; <!-- célula vazia -->
                    }
                </td>
            </tr>
        }



        <tr>
            <td class="total-horas" id="primeira-coluna">Horas totais</td>
            @{
                double totalHorasQuinzena = 0;
                foreach (var dia in Enumerable.Range(startDay, endDay - startDay + 1))
                {
                    var data = new DateTime(DateTime.Parse(Model.Mes).Year, DateTime.Parse(Model.Mes).Month, dia);
                    if (data.DayOfWeek == DayOfWeek.Saturday || data.DayOfWeek == DayOfWeek.Sunday)
                    {
                        <td class="celula-dia weekend" data-dia-id=""></td>
                    }
                    else
                    {
                        var lancamentosDoDia = Model.Lancamentos.Where(l => l.DiaData.Date == data);
                        var totalHoras = lancamentosDoDia.Sum(l => l.Horas);
                        totalHorasQuinzena += totalHoras;
                        <td class="total-horas" data-date="@data.ToString("dd/MM")">
                            @if (totalHoras > 0)
                            {
                                @totalHoras.ToString("0.0")
                            }
                        </td>
                    }
                }
            }
            <td class="total-horas-quinzena">
                @if (totalHorasQuinzena > 0)
                {
                    @totalHorasQuinzena.ToString("0.0")
                }
            </td>
        </tr>
    </tbody>

    <tfoot>
        <tr>
            <td class="horario-trabalho" id="primeira-coluna">Horário de trabalho</td>
            @{
                double totalHorarioTrabalho = 0;
                foreach (var dia in Enumerable.Range(startDay, endDay - startDay + 1))
                {
                    var data = new DateTime(DateTime.Parse(Model.Mes).Year, DateTime.Parse(Model.Mes).Month, dia);
                    if (data.DayOfWeek == DayOfWeek.Saturday || data.DayOfWeek == DayOfWeek.Sunday)
                    {
                        <td class="celula-dia weekend" data-dia-id=""></td>
                    }
                    else
                    {
                        totalHorarioTrabalho += 8;
                        <td class="horario-trabalho">8,0</td>
                    }
                }
            }
            <td class="total-horario-trabalho">@totalHorarioTrabalho.ToString("0.0")</td> <!-- célula de soma nova -->
        </tr>


        <tr>
            <td class="horas-excedentes" id="primeira-coluna">Horas excedentes</td>
            @{
                double totalHorasExcedentesQuinzena = 0;
                foreach (var dia in Enumerable.Range(startDay, endDay - startDay + 1))
                {
                    var data = new DateTime(DateTime.Parse(Model.Mes).Year, DateTime.Parse(Model.Mes).Month, dia);
                    var lancamentosDoDia = Model.Lancamentos.Where(l => l.DiaData.Date == data);
                    var totalHoras = lancamentosDoDia.Sum(l => l.Horas);
                    double horasExcedentes = 0;

                    // Se o dia for sábado ou domingo, todas as horas são consideradas excedentes
                    if (data.DayOfWeek == DayOfWeek.Saturday || data.DayOfWeek == DayOfWeek.Sunday)
                    {
                        horasExcedentes = totalHoras;
                        totalHorasExcedentesQuinzena += horasExcedentes;
                        if (horasExcedentes > 0)
                        {
                            <td class="celula-dia weekend" data-date="@data.ToString("dd/MM")">
                                @horasExcedentes.ToString("0.0")
                            </td>
                        }
                        else
                        {
                            <td class="celula-dia weekend" data-date="@data.ToString("dd/MM")"></td>
                        }
                    }
                    else
                    {
                        // ELSE = calcula as horas excedentes como o máximo entre 0 e o total de horas menos 8
                        horasExcedentes = Math.Max(0, totalHoras - 8);
                        totalHorasExcedentesQuinzena += horasExcedentes;

                        if (horasExcedentes > 0)
                        {
                            <td class="horas-excedentes" data-date="@data.ToString("dd/MM")">
                                @horasExcedentes.ToString("0.0")
                            </td>
                        }
                        else
                        {
                            <td class="horas-excedentes" data-date="@data.ToString("dd/MM")"></td>
                        }
                    }
                }
            }

            @if (totalHorasExcedentesQuinzena > 0)
            {
                <td class="total-horas-excedentes-quinzena">
                    @totalHorasExcedentesQuinzena.ToString("0.0")
                </td>
            }
            else
            {
                <td class="total-horas-excedentes-quinzena"></td>
            }
        </tr>


    </tfoot>


</table>

<!-- Modal para exibir alertas -->

<div class="modal fade" id="alertModal" tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true">

    <div class="modal-dialog" role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title" id="alertModalLabel">Atenção</h5>

            </div>

            <div class="modal-body">

                <p id="alertText"></p>

            </div>

        </div>

    </div>

</div>


<!-- Início dos botões  -->

<a class="custom-filter-button" asp-action="Create"><i class="bi bi-plus-circle"></i></a>
<a class="custom-filter-button edit-button"><i class="bi bi-pencil"></i></a>
<a class="custom-filter-button bg-danger delete-button"><i class="bi bi-trash3"></i></a>

<!-- Fim dos botões -->
<!--------------------------- SCRIPTS ----------------------------------->


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>

<script>

    var diaIdAtivo;  // variável global - armazena o ID do dia da célula ativa

    $(document).ready(function () {


        $('.celula-dia, .celula-dia-clicavel').click(function () {

            diaIdAtivo = $(this).data('dia-id');

        });


        $('.celula-dia').click(function () {
            // Remove a classe de todas as células
            $('.celula-dia').removeClass('selecionada');
            // Adiciona a classe apenas à célula clicada
            $(this).addClass('selecionada');
        });


        // Botão de Edit:

        $('.edit-button').click(function (e) {

            e.preventDefault();

            window.location.href = '/Dias/Edit/' + diaIdAtivo;

        });

        // Botão de Excluir:

        $('.delete-button').click(function (e) {

            e.preventDefault();

            window.location.href = '/Dias/Delete/' + diaIdAtivo;

        });


        // Adiciona a classe "weekend" às células de fim de semana

        $('.celula-dia').each(function () {

            var dataClicada = new Date($(this).data('date'));

            if (dataClicada.getDay() === 0 || dataClicada.getDay() === 6) {

                // Se for um fim de semana, adiciona a classe "weekend" à célula
                $(this).addClass('weekend');

            }

        });


        // Modal de alerta

        var diasInsuficientes = [];

        $('.total-horas').each(function () {

            var totalHoras = parseFloat($(this).text());
            var data = $(this).data('date');

            if (totalHoras < 8) {
                diasInsuficientes.push(data);
            }

        });

        if (diasInsuficientes.length > 0) {

            var alertText = 'Aviso:  O total de horas registrado nos seguintes dias está abaixo das 8 horas diárias: ' + diasInsuficientes.join(', ');

            $('#alertText').text(alertText);
            $('#alertModal').modal('show');

        }



    });

    // mês mínimo e máximo para navegar entre as quinzenas
    document.getElementById('mes').min = '2024-01';
    document.getElementById('mes').max = '2025-01'


</script>

