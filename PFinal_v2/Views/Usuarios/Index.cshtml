@model IEnumerable<PFinal_v2.Models.Usuario>

@{
    ViewData["Title"] = "Funcionários";
    var isAdmin = ViewBag.IsAdmin as bool? ?? false;
}

<style>
    .icons-container {
        display: flex;
    }

    .custom-table {
        border-radius: 5px; /* Cantos mais arredondados */
        overflow: hidden;
        background-color: #f2f2f2; /* Cor de fundo da tabela */
        border-bottom: 2px solid #A76C38;
    }

    .password-container {
        display: flex;
        align-items: center;
    }

    .toggle-password {
        cursor: pointer;
        margin-left: 10px;
    }
</style>

@if (TempData["SuccessMessage"] != null)

{

    <div class="alert alert-success" role="alert">

        @TempData["SuccessMessage"]

    </div>

}


<div class="container">
    <div class="row">

        <div class="col-11">
            <form asp-controller="Usuarios" asp-action="Index">
                <div class="form-group mt-3">
                    <input type="text" name="SearchString" id="searchString" placeholder="Nome" class="custom-search-input" />
                    <button type="submit" class="custom-filter-button">
                        <i class="bi bi-search"></i>
                    </button>
                    <button type="button" id="limparFiltro" class="custom-filter-button">
                        <i class="bi bi-x-lg"></i>

                    </button>
                </div>
            </form>
        </div>

        <div class="col-4">
            <p>
                <a asp-action="Create">
                    <button type="submit" class="custom-filter-button">
                        <i class="bi bi-person-plus-fill"></i>
                    </button>
                </a>
            </p>
        </div>
    </div>


<table class="table custom-table" style="margin-top: 40px;">
    <thead>
        <tr>
            <th scope="col" class=" text-center">Nome</th>
            <th scope="col" class="text-center">E-mail</th>
            <th scope="col" class="text-center">Departamento</th>
            <th scope="col" class="text-center">Data de contratação</th>
            <th scope="col" class="text-center">Local de Trabalho</th>
            <th scope="col" class="text-center">Administrador</th>
            <th scope="col" class="text-center">Senha</th>
            <th scope="col" class="text-center">Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-center">@Html.DisplayFor(modelItem => item.Nome)</td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.Email)</td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.Departamento.Nome)</td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.DataContratacao)</td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.LocalTrabalho)
                </td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.IsAdmin)</td>
                <td class="text-center">
                    @if (isAdmin)
                    {
                        <div class="password-container">
                            <span class="password-text" style="display: none;">@item.Senha</span>
                            <i class="bi bi-eye toggle-password"></i>
                        </div>
                    }
                    else
                    {
                        <span>******</span>
                    }
                </td>
                <td class="text-center">
                    <div class="icons-container" style="justify-content: center;">
                        <a asp-action="Edit" asp-route-id="@item.UsuarioId"><i class="bi bi-pencil custom-white-icon"></i></a> &nbsp;
                        <a asp-action="Details" asp-route-id="@item.UsuarioId"><i class="bi bi-search custom-white-icon"></i></a> &nbsp;
                        <form id="deleteForm_@item.UsuarioId" asp-action="Delete" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@item.UsuarioId" />
                            <a href="#" onclick="openConfirmationModal('@item.UsuarioId'); return false;"><i class="bi bi-trash custom-white-icon"></i></a>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal" id="confirmModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmação de Exclusão</h5>
                <button type="button" class="close" data-dismiss="modal" onclick="cancelChanges()">&times;</button>
            </div>
            <div class="modal-body">
                <p>Deseja realmente excluir este usuário?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="cancelChanges()">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Confirmar</button>
            </div>
        </div>
    </div>
</div>


<a href="@Url.Action("Index", "Admin")" class="custom-filter-button" style="margin-bottom: 40px;">Voltar</a> 

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            document.querySelectorAll('.toggle-password').forEach(element => {
                element.addEventListener('click', function () {
                    let passwordText = this.previousElementSibling;
                    if (passwordText.style.display === 'none') {
                        passwordText.style.display = 'inline';
                        this.classList.remove('bi-eye');
                        this.classList.add('bi-eye-slash');
                    } else {
                        passwordText.style.display = 'none';
                        this.classList.remove('bi-eye-slash');
                        this.classList.add('bi-eye');
                    }
                });
            });
        });

        function openConfirmationModal(userId) {
            $('#confirmModal').modal('show'); // Abre o modal de confirmação
            $('#confirmDeleteButton').off('click'); // Remove qualquer handler anterior
            $('#confirmDeleteButton').click(function () {
                submitDeleteForm(userId); // Chama a função para enviar o formulário de exclusão ao clicar em "Confirmar"
            });
        }

        function submitDeleteForm(userId) {
            $('#deleteForm_' + userId).submit(); // Envia o formulário de exclusão com o ID do usuário
        }

        function cancelChanges() {
            $('#confirmModal').modal('hide');
        }


        // Seleciona o botão de limpar filtro
        var limparFiltroBtn = document.getElementById('limparFiltro');

        // Adiciona um evento de clique ao botão de limpar filtro
        limparFiltroBtn.addEventListener('click', function () {
            // Limpa o valor do campo de texto
            document.getElementById('searchString').value = '';
            // Redireciona para a mesma página sem parâmetros de filtro
            window.location.href = '/Usuarios/Index';
        });

            
          $(document).ready(function () {
             $('#successModal').modal('show');
          });
       

    </script>
}

